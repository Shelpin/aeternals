export NODE_ENV=production
export NVM_DIR=/root/.nvm
export PATH=/root/.nvm/versions/node/v23.3.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export HOME=/root
export PORT=3001
export TELEGRAM_BOT_TOKEN=7730096828:AAGNyYucub-98yFCwSb8H-Rb80poQwxwrr4
export CACHE_STORE=database # Defaults to database. Other available cache store: redis and filesystem
export CACHE_DIR=./data/cache # Directory to store the cache files if using filesystem cache
export REDIS_URL=           # Redis URL - could be a local redis instance or cloud hosted redis. Also support rediss:// URLs
export PGLITE_DATA_DIR=     #../pgLite/ if selecting a directory   --- or memory:// if selecting in memory
export SERVER_URL=http://localhost
export SERVER_PORT=3000
export SUPABASE_URL=
export SUPABASE_ANON_KEY=
export MONGODB_CONNECTION_STRING=             #mongodb connection string
export MONGODB_DATABASE=                      #name of the database in mongoDB atlas #default: 'elizaAgent'
export REMOTE_CHARACTER_URLS=
export USE_CHARACTER_STORAGE=false
export DEFAULT_LOG_LEVEL=debug
export LOG_JSON_FORMAT=false            # Print everything in logger as json; false by default
export BITMIND=true
export BITMIND_API_TOKEN=
export DISCORD_APPLICATION_ID=
export DISCORD_API_TOKEN=        # Bot token
export DISCORD_VOICE_CHANNEL_ID= # The ID of the voice channel the bot should join (optional)
export DEVIN_API_TOKEN=         # Get your API key from docs.devin.ai/tutorials/api-integration
export GELATO_RELAY_API_KEY= # Gelato API key
export FARCASTER_FID=                # The FID associated with the account your are sending casts from
export FARCASTER_NEYNAR_API_KEY=     # Neynar API key: https://neynar.com/
export FARCASTER_NEYNAR_SIGNER_UUID= # Signer for the account you are sending casts from. Create a signer here: https://dev.neynar.com/app
export FARCASTER_DRY_RUN=false       # Set to true if you want to run the bot without actually publishing casts
export FARCASTER_POLL_INTERVAL=120   # How often (in seconds) the bot should check for farcaster interactions (replies and mentions)
export TELEGRAM_ACCOUNT_PHONE=              # Account phone number for authorization
export TELEGRAM_ACCOUNT_APP_ID=             # Telegram app api_id (get it at me.telegram.org)
export TELEGRAM_ACCOUNT_APP_HASH=           # Telegram app api_hash (get it at me.telegram.org)
export TELEGRAM_ACCOUNT_DEVICE_MODEL=       # Device model. Example: Samsung Galaxy S28+
export TELEGRAM_ACCOUNT_SYSTEM_VERSION=     # Device system version. Example: Android 12 S? (31)
export TWITTER_DRY_RUN=false
export TWITTER_USERNAME= # Account username
export TWITTER_PASSWORD= # Account password
export TWITTER_EMAIL=    # Account email
export TWITTER_2FA_SECRET=
export TWITTER_COOKIES_AUTH_TOKEN=
export TWITTER_COOKIES_CT0=
export TWITTER_COOKIES_GUEST_ID=
export TWITTER_POLL_INTERVAL=120   # How often (in seconds) the bot should check for interactions
export TWITTER_SEARCH_ENABLE=FALSE # Enable timeline search, WARNING this greatly increases your chance of getting banned
export TWITTER_TARGET_USERS=       # Comma separated list of Twitter user names to interact with
export TWITTER_RETRY_LIMIT=        # Maximum retry attempts for Twitter login
export TWITTER_SPACES_ENABLE=false # Enable or disable Twitter Spaces logic
export ENABLE_TWITTER_POST_GENERATION=true # Set to true to enable automatic tweet generation. If false, the bot will not generate or post tweets.
export POST_INTERVAL_MIN= # Default: 90
export POST_INTERVAL_MAX= # Default: 180
export POST_IMMEDIATELY=  # Default: false
export ACTION_INTERVAL=               # Interval in minutes between action processing runs (default: 5 minutes)
export ENABLE_ACTION_PROCESSING=true # Set to true to enable the action processing loop
export MAX_ACTIONS_PROCESSING=1       # Maximum number of actions (e.g., retweets, likes) to process in a single cycle. Helps prevent excessive or uncontrolled actions.
export ACTION_TIMELINE_TYPE=foryou    # Type of timeline to interact with. Options: "foryou" or "following". Default: "foryou"
export TWITTER_APPROVAL_DISCORD_CHANNEL_ID=  # Channel ID for the Discord bot to listen and send approval messages
export TWITTER_APPROVAL_DISCORD_BOT_TOKEN=   # Discord bot token (this could be a different bot token from DISCORD_API_TOKEN)
export TWITTER_APPROVAL_ENABLED=             # Enable or disable Twitter approval logic #Default is false
export TWITTER_APPROVAL_CHECK_INTERVAL=60000 # Default: 60 seconds
export WHATSAPP_ACCESS_TOKEN=         # Permanent access token from Facebook Developer Console
export WHATSAPP_PHONE_NUMBER_ID=      # Phone number ID from WhatsApp Business API
export WHATSAPP_BUSINESS_ACCOUNT_ID=  # Business Account ID from Facebook Business Manager
export WHATSAPP_WEBHOOK_VERIFY_TOKEN= # Custom string for webhook verification
export WHATSAPP_API_VERSION=v17.0     # WhatsApp API version (default: v17.0)
export ALEXA_SKILL_ID=                # Your Alexa skill ID from developer console (format: amzn1.ask.skill-...)
export ALEXA_CLIENT_ID=               # OAuth2 Client ID from Alexa developer console permissions tab
export ALEXA_CLIENT_SECRET=           # OAuth2 Client Secret from Alexa developer console permissions tab
export SIMSAI_API_KEY= # API key for SimsAI authentication
export SIMSAI_AGENT_ID= # Unique identifier for the SimsAI agent
export SIMSAI_USERNAME= # Username for SimsAI platform access
export SIMSAI_DRY_RUN= # Set to true to test without making actual API calls
export EXPRESS_MAX_PAYLOAD= # Default: 100kb
export OPENAI_API_KEY=         # OpenAI API key, starting with sk-
export OPENAI_API_URL=         # OpenAI API Endpoint (optional), Default: https://api.openai.com/v1
export SMALL_OPENAI_MODEL=     # Default: gpt-4o-mini
export MEDIUM_OPENAI_MODEL=    # Default: gpt-4o
export LARGE_OPENAI_MODEL=     # Default: gpt-4o
export EMBEDDING_OPENAI_MODEL= # Default: text-embedding-3-small
export IMAGE_OPENAI_MODEL=     # Default: dall-e-3
export USE_OPENAI_EMBEDDING=   # Set to TRUE for OpenAI/1536, leave blank for local
export ENABLE_OPEN_AI_COMMUNITY_PLUGIN=false
export OPENAI_DEFAULT_MODEL=
export OPENAI_MAX_TOKENS=
export OPENAI_TEMPERATURE=
export ATOMASDK_BEARER_AUTH=           # Atoma SDK Bearer Auth token
export ATOMA_API_URL=                  # Default: https://api.atoma.network/v1
export SMALL_ATOMA_MODEL=              # Default: meta-llama/Llama-3.3-70B-Instruct
export MEDIUM_ATOMA_MODEL=             # Default: meta-llama/Llama-3.3-70B-Instruct
export LARGE_ATOMA_MODEL=              # Default: meta-llama/Llama-3.3-70B-Instruct
export ETERNALAI_URL=
export ETERNALAI_MODEL=                    # Default: "NousResearch/Hermes-3-Llama-3.1-70B-FP8"
export ETERNALAI_CHAIN_ID=8453            # Default: "8453"
export ETERNALAI_RPC_URL=                  # Ex: https://mainnet.base.org/
export ETERNALAI_AGENT_CONTRACT_ADDRESS=   # Ex: 0xAed016e060e2fFE3092916b1650Fc558D62e1CCC
export ETERNALAI_AGENT_ID=                 # Ex: 1711
export ETERNALAI_API_KEY=
export ETERNALAI_LOG=false #Default: false
export HYPERBOLIC_API_KEY= # Hyperbolic API Key
export HYPERBOLIC_MODEL=
export IMAGE_HYPERBOLIC_MODEL=  # Default: FLUX.1-dev
export SMALL_HYPERBOLIC_MODEL=  # Default: meta-llama/Llama-3.2-3B-Instruct
export MEDIUM_HYPERBOLIC_MODEL= # Default: meta-llama/Meta-Llama-3.1-70B-Instruct
export LARGE_HYPERBOLIC_MODEL=  # Default: meta-llama/Meta-Llama-3.1-405-Instruct
export HYPERBOLIC_ENV=production
export HYPERBOLIC_API_KEY=
export HYPERBOLIC_GRANULAR_LOG=true
export HYPERBOLIC_SPASH=true
export HYPERBOLIC_LOG_LEVEL=debug
export INFERA_API_KEY=      # visit api.infera.org/docs to obtain an API key under /signup_user
export INFERA_MODEL=        # Default: llama3.2:latest
export INFERA_SERVER_URL=   # Default: https://api.infera.org/
export SMALL_INFERA_MODEL=  #Recommended: llama3.2:latest
export MEDIUM_INFERA_MODEL= #Recommended: mistral-nemo:latest
export LARGE_INFERA_MODEL=  #Recommended: mistral-small:latest
export VENICE_API_KEY=      # generate from venice settings
export SMALL_VENICE_MODEL=  # Default: llama-3.3-70b
export MEDIUM_VENICE_MODEL= # Default: llama-3.3-70b
export LARGE_VENICE_MODEL=  # Default: llama-3.1-405b
export IMAGE_VENICE_MODEL=  # Default: fluently-xl
export NINETEEN_AI_API_KEY=      # Get a free api key from https://nineteen.ai/app/api
export SMALL_NINETEEN_AI_MODEL=  # Default: unsloth/Llama-3.2-3B-Instruct
export MEDIUM_NINETEEN_AI_MODEL= # Default: unsloth/Meta-Llama-3.1-8B-Instruct
export LARGE_NINETEEN_AI_MODEL=  # Default: hugging-quants/Meta-Llama-3.1-70B-Instruct-AWQ-INT4
export IMAGE_NINETEEN_AI_MODE=   # Default: dataautogpt3/ProteusV0.4-Lightning
export AKASH_CHAT_API_KEY=          # Get from https://chatapi.akash.network/
export SMALL_AKASH_CHAT_API_MODEL=  # Default: Meta-Llama-3-2-3B-Instruct
export MEDIUM_AKASH_CHAT_API_MODEL= # Default: Meta-Llama-3-3-70B-Instruct
export LARGE_AKASH_CHAT_API_MODEL=  # Default: Meta-Llama-3-1-405B-Instruct-FP8
export LIVEPEER_GATEWAY_URL=https://dream-gateway.livepeer.cloud           # Free inference gateways and docs: https://livepeer-eliza.com/
export IMAGE_LIVEPEER_MODEL=           # Default: ByteDance/SDXL-Lightning
export SMALL_LIVEPEER_MODEL=           # Default: meta-llama/Meta-Llama-3.1-8B-Instruct
export MEDIUM_LIVEPEER_MODEL=          # Default: meta-llama/Meta-Llama-3.1-8B-Instruct
export LARGE_LIVEPEER_MODEL=           # Default: meta-llama/Meta-Llama-3.1-8B-Instruct
export ELEVENLABS_XI_API_KEY= # API key from elevenlabs
export TRANSCRIPTION_PROVIDER= # Default: local (possible values: openai, deepgram, local)
export ELEVENLABS_MODEL_ID=eleven_multilingual_v2
export ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM
export ELEVENLABS_VOICE_STABILITY=0.5
export ELEVENLABS_VOICE_SIMILARITY_BOOST=0.9
export ELEVENLABS_VOICE_STYLE=0.66
export ELEVENLABS_VOICE_USE_SPEAKER_BOOST=false
export ELEVENLABS_OPTIMIZE_STREAMING_LATENCY=4
export ELEVENLABS_OUTPUT_FORMAT=pcm_16000
export OPENROUTER_API_KEY= # OpenRouter API Key
export OPENROUTER_MODEL=   # Default: uses hermes 70b/405b
export SMALL_OPENROUTER_MODEL=
export MEDIUM_OPENROUTER_MODEL=
export LARGE_OPENROUTER_MODEL=
export REDPILL_API_KEY= # REDPILL API Key
export REDPILL_MODEL=
export SMALL_REDPILL_MODEL=  # Default: gpt-4o-mini
export MEDIUM_REDPILL_MODEL= # Default: gpt-4o
export LARGE_REDPILL_MODEL=  # Default: gpt-4o
export GROK_API_KEY=         # GROK/xAI API Key
export SMALL_GROK_MODEL=     # Default: grok-2-1212
export MEDIUM_GROK_MODEL=    # Default: grok-2-1212
export LARGE_GROK_MODEL=     # Default: grok-2-1212
export EMBEDDING_GROK_MODEL= # Default: grok-2-1212
export OLLAMA_SERVER_URL= # Default: localhost:11434
export OLLAMA_MODEL=
export USE_OLLAMA_EMBEDDING=   # Set to TRUE for OLLAMA/1024, leave blank for local
export OLLAMA_EMBEDDING_MODEL=false # Default: mxbai-embed-large
export SMALL_OLLAMA_MODEL=     # Default: llama3.2
export MEDIUM_OLLAMA_MODEL=    # Default: hermes3
export LARGE_OLLAMA_MODEL=     # Default: hermes3:70b
export GOOGLE_MODEL=
export SMALL_GOOGLE_MODEL=     # Default: gemini-1.5-flash-latest
export MEDIUM_GOOGLE_MODEL=    # Default: gemini-1.5-flash-latest
export LARGE_GOOGLE_MODEL=     # Default: gemini-1.5-pro-latest
export EMBEDDING_GOOGLE_MODEL= # Default: text-embedding-004
export MISTRAL_MODEL=
export SMALL_MISTRAL_MODEL=  # Default: mistral-small-latest
export MEDIUM_MISTRAL_MODEL= # Default: mistral-large-latest
export LARGE_MISTRAL_MODEL=  # Default: mistral-large-latest
export GROQ_API_KEY=         # Starts with gsk_
export SMALL_GROQ_MODEL=     # Default: llama-3.1-8b-instant
export MEDIUM_GROQ_MODEL=    # Default: llama-3.3-70b-versatile
export LARGE_GROQ_MODEL=     # Default: llama-3.2-90b-vision-preview
export EMBEDDING_GROQ_MODEL= # Default: llama-3.1-8b-instant
export LLAMALOCAL_PATH= # Default: "" which is the current directory in plugin-node/dist/ which gets destroyed and recreated on every build
export SMALL_NANOGPT_MODEL=  # Default: gpt-4o-mini
export MEDIUM_NANOGPT_MODEL= # Default: gpt-4o
export LARGE_NANOGPT_MODEL=  # Default: gpt-4o
export ANTHROPIC_API_KEY=      # For Claude
export ANTHROPIC_API_URL=
export SMALL_ANTHROPIC_MODEL=  # Default: claude-3-haiku-20240307
export MEDIUM_ANTHROPIC_MODEL= # Default: claude-3-5-sonnet-20241022
export LARGE_ANTHROPIC_MODEL=  # Default: claude-3-5-sonnet-20241022
export HEURIST_API_KEY=      # Get from https://heurist.ai/dev-access
export SMALL_HEURIST_MODEL=  # Default: meta-llama/llama-3-70b-instruct
export MEDIUM_HEURIST_MODEL= # Default: meta-llama/llama-3-70b-instruct
export LARGE_HEURIST_MODEL=  # Default: meta-llama/llama-3.3-70b-instruct
export HEURIST_IMAGE_MODEL=  # Default: FLUX.1-dev
export HEURIST_EMBEDDING_MODEL= # Default: BAAI/bge-large-en-v1.5
export USE_HEURIST_EMBEDDING= # Set to TRUE for HEURIST embedding, leave blank for local
export GAIANET_MODEL=
export GAIANET_SERVER_URL=
export SMALL_GAIANET_MODEL=       # Default: llama3b
export SMALL_GAIANET_SERVER_URL=  # Default: https://llama3b.gaia.domains/v1
export MEDIUM_GAIANET_MODEL=      # Default: llama
export MEDIUM_GAIANET_SERVER_URL= # Default: https://llama8b.gaia.domains/v1
export LARGE_GAIANET_MODEL=       # Default: qwen72b
export LARGE_GAIANET_SERVER_URL=  # Default: https://qwen72b.gaia.domains/v1
export GAIANET_EMBEDDING_MODEL=
export USE_GAIANET_EMBEDDING= # Set to TRUE for GAIANET/768, leave blank for local
export VOLENGINE_API_URL= # Volcengine API Endpoint, Default: https://open.volcengineapi.com/api/v3/
export VOLENGINE_MODEL=
export SMALL_VOLENGINE_MODEL=     # Default: doubao-lite-128k
export MEDIUM_VOLENGINE_MODEL=    # Default: doubao-pro-128k
export LARGE_VOLENGINE_MODEL=     # Default: doubao-pro-256k
export VOLENGINE_EMBEDDING_MODEL= # Default: doubao-embedding
export DEEPSEEK_API_KEY=sk-8f76f2c965ed4bd4bf0fa28374343aae      #Your DeepSeek API key
export DEEPSEEK_API_URL=      # Default: https://api.deepseek.com
export SMALL_DEEPSEEK_MODEL=  # Default: deepseek-chat
export MEDIUM_DEEPSEEK_MODEL= # Default: deepseek-chat
export LARGE_DEEPSEEK_MODEL=  # Default: deepseek-chat
export FAL_API_KEY=
export FAL_AI_LORA_PATH=
export LETZAI_API_KEY= # LetzAI API Key
export LETZAI_MODELS=  # list of Letzai models to add to each prompt, e.g.: "@modelname1, @modelname2"
export GALADRIEL_API_KEY=gal-*      # Get from https://dashboard.galadriel.com/
export SMALL_GALADRIEL_MODEL=       # Default: gpt-4o-mini
export MEDIUM_GALADRIEL_MODEL=      # Default: gpt-4o
export LARGE_GALADRIEL_MODEL=       # Default: gpt-4o
export GALADRIEL_FINE_TUNE_API_KEY= # Use an OpenAI key to use a fine-tuned model with the verified inference endpoint
export LMSTUDIO_SERVER_URL=   # Default: http://localhost:1234/v1
export LMSTUDIO_MODEL=
export SMALL_LMSTUDIO_MODEL=  # Default: hermes-3-llama-3.1-8b
export MEDIUM_LMSTUDIO_MODEL= # Default: hermes-3-llama-3.1-8b
export LARGE_LMSTUDIO_MODEL=  # Default: hermes-3-llama-3.1-8b
export SECRET_AI_API_KEY=            # Secret AI API Key
export SECRET_AI_URL=                # Default: https://ai1.scrtlabs.com:21434
export SMALL_SECRET_AI_MODEL=        # Default: deepseek-r1:70b
export MEDIUM_SECRET_AI_MODEL=       # Default: deepseek-r1:70b
export LARGE_SECRET_AI_MODEL=        # Default: deepseek-r1:70b
export NEARAI_API_URL=      # Default: https://api.near.ai/v1
export NEARAI_API_KEY=      # NEAR AI API Key (optional). If you have run `nearai login` with NEAR AI CLI, the API key will be parsed from `~/.nearai/config.json`: https://docs.near.ai/agents/quickstart/
export NEARAI_MODEL=
export SMALL_NEARAI_MODEL=  # Default: fireworks::accounts/fireworks/models/llama-v3p2-3b-instruct
export MEDIUM_NEARAI_MODEL= # Default: fireworks::accounts/fireworks/models/llama-v3p1-70b-instruct
export LARGE_NEARAI_MODEL=  # Default: fireworks::accounts/fireworks/models/llama-v3p1-405b-instruct
export IMAGE_NEARAI_MODEL=   # Default: fireworks::accounts/fireworks/models/playground-v2-5-1024px-aesthetic
export GOOGLE_GENERATIVE_AI_API_KEY= # Gemini API key
export ALI_BAILIAN_API_KEY=          # Ali Bailian API Key
export NANOGPT_API_KEY=              # NanoGPT API Key
export TOGETHER_API_KEY=             # Together API Key
export COINMARKETCAP_API_KEY=
export ZERION_API_KEY=
export COINGECKO_API_KEY=CG-b3zcyweVQd51ha3ezLh98AAm
export COINGECKO_PRO_API_KEY=
export MORALIS_API_KEY=
export EVM_PRIVATE_KEY=          # Add the "0x" prefix infront of your private key string                  
export EVM_PROVIDER_URL=
export ZILLIQA_PRIVATE_KEY=
export ZILLIQA_PROVIDER_URL=
export AVALANCHE_PRIVATE_KEY=
export AVALANCHE_PUBLIC_KEY=
export ARTHERA_PRIVATE_KEY=
export SOLANA_PRIVATE_KEY=
export SOLANA_PUBLIC_KEY=
export SOLANA_CLUSTER=           # Default: devnet. Solana Cluster: 'devnet' | 'testnet' | 'mainnet-beta'
export SOLANA_ADMIN_PRIVATE_KEY= # This wallet is used to verify NFTs
export SOLANA_ADMIN_PUBLIC_KEY=  # This wallet is used to verify NFTs
export SOLANA_VERIFY_TOKEN=      # Authentication token for calling the verification API
export INJECTIVE_PRIVATE_KEY= #
export INJECTIVE_PUBLIC_KEY= #
export INJECTIVE_NETWORK= #
export WALLET_PRIVATE_KEY=
export WALLET_PUBLIC_KEY=
export BIRDEYE_API_KEY=
export SOL_ADDRESS=So11111111111111111111111111111111111111112
export SLIPPAGE=1
export BASE_MINT=So11111111111111111111111111111111111111112
export SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
export HELIUS_API_KEY=
export ABSTRACT_ADDRESS=
export ABSTRACT_PRIVATE_KEY=
export ABSTRACT_RPC_URL=https://api.testnet.abs.xyz
export STARKNET_ADDRESS=
export STARKNET_PRIVATE_KEY=
export STARKNET_RPC_URL=https://rpc.starknet-testnet.lava.build
export LENS_ADDRESS=
export LENS_PRIVATE_KEY=
export VICTION_ADDRESS=
export VICTION_PRIVATE_KEY=
export VICTION_RPC_URL=
export FORM_PRIVATE_KEY= # Form character account private key
export FORM_TESTNET=true # A flag indicating if connection is made to Form Testnet. Set to false for Mainnet connection.
export COINBASE_COMMERCE_KEY=              # From Coinbase developer portal
export COINBASE_API_KEY=                   # From Coinbase developer portal
export COINBASE_PRIVATE_KEY=               # From Coinbase developer portal
export COINBASE_GENERATED_WALLET_ID=       # Not your address but the wallet ID from generating a wallet through the plugin
export COINBASE_GENERATED_WALLET_HEX_SEED= # Not your address but the wallet hex seed from generating a wallet through the plugin and calling export
export COINBASE_NOTIFICATION_URI=          # For webhook plugin the uri you want to send the webhook to for dummy ones use https://webhook.site
export CDP_API_KEY_NAME=
export CDP_API_KEY_PRIVATE_KEY=
export CDP_AGENT_KIT_NETWORK=base-sepolia # Optional: Defaults to base-sepolia
export IS_CHARITABLE=false # Set to true to enable charity donations
export CHARITY_ADDRESS_BASE=0x1234567890123456789012345678901234567890
export CHARITY_ADDRESS_SOL=pWvDXKu6CpbKKvKQkZvDA66hgsTB6X2AgFxksYogHLV
export CHARITY_ADDRESS_ETH=0x750EF1D7a0b4Ab1c97B7A623D7917CcEb5ea779C
export CHARITY_ADDRESS_ARB=0x1234567890123456789012345678901234567890
export CHARITY_ADDRESS_POL=0x1234567890123456789012345678901234567890
export THIRDWEB_SECRET_KEY= # Create key on thirdweb developer dashboard: https://thirdweb.com/
export CONFLUX_CORE_PRIVATE_KEY=
export CONFLUX_CORE_SPACE_RPC_URL=
export CONFLUX_ESPACE_PRIVATE_KEY=
export CONFLUX_ESPACE_RPC_URL=
export CONFLUX_MEME_CONTRACT_ADDRESS=
export MIND_HOT_WALLET_PRIVATE_KEY=
export MIND_COLD_WALLET_ADDRESS=
export ZEROG_INDEXER_RPC=
export ZEROG_EVM_RPC=
export ZEROG_PRIVATE_KEY=
export ZEROG_FLOW_ADDRESS=
export IQ_WALLET_ADDRESS=              # If you enter the wallet address used on the site, the most recently inscribed json will be loaded.
export IQSOlRPC=
export SQUID_SDK_URL=https://apiplus.squidrouter.com # Default: https://apiplus.squidrouter.com
export SQUID_INTEGRATOR_ID=                          # get integrator id through https://docs.squidrouter.com/
export SQUID_EVM_ADDRESS=
export SQUID_EVM_PRIVATE_KEY=
export SQUID_API_THROTTLE_INTERVAL=1000 # Default: 1000; Used to throttle API calls to avoid rate limiting (in ms)
export TEE_MODE=OFF        # LOCAL | DOCKER | PRODUCTION
export WALLET_SECRET_SALT= # ONLY define if you want to use TEE Plugin, otherwise it will throw errors
export TEE_LOG_DB_PATH=    # Custom path for TEE Log database, default: ./data/tee_log.sqlite
export VLOG= # true/false;  if you want to use TEE Verifiable Log, set this to "true"
export GALADRIEL_API_KEY=gal-* # Get from https://dashboard.galadriel.com/
export AKASH_CHAT_API_KEY=          # Get from https://chatapi.akash.network/
export SMALL_AKASH_CHAT_API_MODEL=  # Default: Meta-Llama-3-2-3B-Instruct
export MEDIUM_AKASH_CHAT_API_MODEL= # Default: Meta-Llama-3-3-70B-Instruct
export LARGE_AKASH_CHAT_API_MODEL=  # Default: Meta-Llama-3-1-405B-Instruct-FP8
export FAL_API_KEY=
export FAL_AI_LORA_PATH=
export TAVILY_API_KEY=
export WHATSAPP_ACCESS_TOKEN=         # Permanent access token from Facebook Developer Console
export WHATSAPP_PHONE_NUMBER_ID=      # Phone number ID from WhatsApp Business API
export WHATSAPP_BUSINESS_ACCOUNT_ID=  # Business Account ID from Facebook Business Manager
export WHATSAPP_WEBHOOK_VERIFY_TOKEN= # Custom string for webhook verification
export WHATSAPP_API_VERSION=v17.0     # WhatsApp API version (default: v17.0)
export ENABLE_TEE_LOG=false           # Set to true to enable TEE logging, only available when running eliza in TEE
export FLOW_ADDRESS=
export FLOW_PRIVATE_KEY=  # Private key for SHA3-256 + P256 ECDSA
export FLOW_NETWORK=      # Default: mainnet
export FLOW_ENDPOINT_URL= # Default: https://mainnet.onflow.org
export INTERNET_COMPUTER_PRIVATE_KEY=
export INTERNET_COMPUTER_ADDRESS=
export CLOUDFLARE_GW_ENABLED=    # Set to true to enable Cloudflare AI Gateway
export CLOUDFLARE_AI_ACCOUNT_ID= # Cloudflare AI Account ID - found in the Cloudflare Dashboard under AI Gateway
export CLOUDFLARE_AI_GATEWAY_ID= # Cloudflare AI Gateway ID - found in the Cloudflare Dashboard under AI Gateway
export APTOS_PRIVATE_KEY= # Aptos private key
export APTOS_NETWORK=     # Must be one of mainnet, testnet
export MVX_PRIVATE_KEY=                    # Multiversx private key
export MVX_NETWORK=                        # must be one of mainnet, devnet, testnet
export ACCESS_TOKEN_MANAGEMENT_TO=everyone  # you can put an userid to limit token managament to one user only (use same id as in the database)
export NEAR_WALLET_SECRET_KEY= # NEAR Wallet Secret Key
export NEAR_WALLET_PUBLIC_KEY= # NEAR Wallet Public Key
export NEAR_ADDRESS=
export NEAR_SLIPPAGE=1
export NEAR_RPC_URL=https://near-testnet.lava.build
export NEAR_NETWORK=testnet # or mainnet
export ZKSYNC_ADDRESS=
export ZKSYNC_PRIVATE_KEY=
export HOLDSTATION_PRIVATE_KEY=
export AVAIL_ADDRESS=
export AVAIL_SEED=
export AVAIL_APP_ID=0
export AVAIL_RPC_URL=wss://avail-turing.public.blastapi.io/ # (Default) Testnet: wss://avail-turing.public.blastapi.io/ | Mainnet: wss://avail-mainnet.public.blastapi.io/
export TEE_MARLIN=                      # Set "yes" to enable the plugin
export TEE_MARLIN_ATTESTATION_ENDPOINT= # Optional, default "http://127.0.0.1:1350"
export TON_PRIVATE_KEY= # Ton Mnemonic Seed Phrase Join With Empty String
export TON_RPC_URL=     # ton rpc
export TON_RPC_API_KEY= # ton rpc api key
export TON_NFT_IMAGES_FOLDER= # Path to the folder containing the NFT images
export TON_NFT_METADATA_FOLDER= # Path to the folder containing the NFT metadata
export PINATA_API_KEY= # Pinata API key
export PINATA_API_SECRET= # Pinata API secret
export SUI_PRIVATE_KEY= # Sui Mnemonic Seed Phrase (`sui keytool generate ed25519`) , Also support `suiprivatekeyxxxx` (sui keytool export --key-identity 0x63)
export SUI_NETWORK=     # must be one of mainnet, testnet, devnet, localnet
export MINA_PRIVATE_KEY= # Mina Mnemonic Seed Phrase: https://docs.minaprotocol.com/using-mina/install-a-wallet
export MINA_NETWORK=devnet # must be one of mainnet, testnet, devnet, localnet
export STORY_PRIVATE_KEY=  # Story private key
export STORY_API_BASE_URL= # Story API base URL
export STORY_API_KEY=      # Story API key
export PINATA_JWT=         # Pinata JWT for uploading files to IPFS
export COSMOS_RECOVERY_PHRASE=  # 12 words recovery phrase (need to be in quotes, because of spaces)
export COSMOS_AVAILABLE_CHAINS= # mantrachaintestnet2,cosmos  # Array of chains
export CRONOSZKEVM_ADDRESS=
export CRONOSZKEVM_PRIVATE_KEY=
export FUEL_WALLET_PRIVATE_KEY=
export TOKENIZER_MODEL= # Specify the tokenizer model to be used.
export TOKENIZER_TYPE=  # Options: tiktoken (for OpenAI models) or auto (AutoTokenizer from Hugging Face for non-OpenAI models). Default: tiktoken.
export SPHERON_PRIVATE_KEY=
export SPHERON_PROVIDER_PROXY_URL=
export SPHERON_WALLET_ADDRESS=
export STARGAZE_ENDPOINT=
export GENLAYER_PRIVATE_KEY= # Private key of the GenLayer account to use for the agent in this format (0x0000000000000000000000000000000000000000000000000000000000000000)
export BNB_PRIVATE_KEY=            # BNB chain private key
export BNB_PUBLIC_KEY=             # BNB-smart-chain public key (address)
export BSC_PROVIDER_URL=           # BNB-smart-chain rpc url
export OPBNB_PROVIDER_URL=         # OPBNB rpc url
export INTIFACE_WEBSOCKET_URL=ws://localhost:12345
export GIPHY_API_KEY=Ds3T816MGHI9symcoHl9LZ714YbcgN7P
export OPEN_WEATHER_API_KEY= # OpenWeather API key
export PASSPORT_API_KEY= #Gitcoin Passport key
export PASSPORT_SCORER=  #Scorer number
export ECHOCHAMBERS_API_URL=http://127.0.0.1:3333
export ECHOCHAMBERS_API_KEY=testingkey0011
export ECHOCHAMBERS_USERNAME=eliza
export ECHOCHAMBERS_ROOMS=general #comma delimited list of rooms the agent watches
export ECHOCHAMBERS_POLL_INTERVAL=60
export ECHOCHAMBERS_MAX_MESSAGES=10
export ECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL=300 # 5 minutes - checks rooms every 5 minutes
export ECHOCHAMBERS_QUIET_PERIOD=900 # 15 minutes - waits for 15 minutes of silence
export ALLORA_API_KEY=    # Allora API key, format: UP-f8db7d6558ab432ca0d92716
export ALLORA_CHAIN_SLUG= # must be one of mainnet, testnet. If not specified, it will use testnet by default
export B2_PRIVATE_KEY= # Private key of the B2 Network account to use for the agent
export OPACITY_TEAM_ID=f309ac8ae8a9a14a7e62cd1a521b1c5f
export OPACITY_CLOUDFLARE_NAME=eigen-test
export OPACITY_PROVER_URL=https://opacity-ai-zktls-demo.vercel.app
export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=
export AWS_REGION=
export AWS_S3_BUCKET=
export AWS_S3_UPLOAD_PATH=
export AWS_S3_ENDPOINT=
export AWS_S3_SSL_ENABLED=
export AWS_S3_FORCE_PATH_STYLE=
export DEVA_API_KEY= # You can get the API key from the created application in deva.me/settings/apps
export DEVA_API_BASE_URL=https://api.deva.me # Default server url for production. Use https://api-staging.deva.me for staging.
export DEEPGRAM_API_KEY=
export VERIFIABLE_INFERENCE_ENABLED=false    # Set to false to disable verifiable inference
export VERIFIABLE_INFERENCE_PROVIDER=opacity # Options: opacity
export QDRANT_URL=
export QDRANT_KEY=
export QDRANT_PORT=443
export QDRANT_VECTOR_SIZE=1536
export AUTONOME_JWT_TOKEN=
export AUTONOME_RPC=https://wizard-bff-rpc.alt.technology/v1/bff/aaa/apps
export AKASH_ENV=mainnet
export AKASH_NET=https://raw.githubusercontent.com/ovrclk/net/master/mainnet
export RPC_ENDPOINT=https://rpc.akashnet.net:443
export AKASH_GAS_PRICES=0.025uakt
export AKASH_GAS_ADJUSTMENT=1.5
export AKASH_KEYRING_BACKEND=os
export AKASH_FROM=default
export AKASH_FEES=20000uakt
export AKASH_DEPOSIT=500000uakt
export AKASH_MNEMONIC=
export AKASH_WALLET_ADDRESS=
export AKASH_PRICING_API_URL=https://console-api.akash.network/v1/pricing
export AKASH_DEFAULT_CPU=1000
export AKASH_DEFAULT_MEMORY=1000000000
export AKASH_DEFAULT_STORAGE=1000000000
export AKASH_SDL=example.sdl.yml
export AKASH_CLOSE_DEP=closeAll
export AKASH_CLOSE_DSEQ=19729929
export AKASH_PROVIDER_INFO=akash1ccktptfkvdc67msasmesuy5m7gpc76z75kukpz
export AKASH_DEP_STATUS=dseq
export AKASH_DEP_DSEQ=19729929
export AKASH_GAS_OPERATION=close
export AKASH_GAS_DSEQ=19729929
export AKASH_MANIFEST_MODE=auto
export AKASH_MANIFEST_PATH=
export AKASH_MANIFEST_VALIDATION_LEVEL=strict
export QUAI_PRIVATE_KEY=
export QUAI_RPC_URL=https://rpc.quai.network
export CHAINBASE_API_KEY= # demo is a free tier key
export ZERO_EX_API_KEY=
export ALCHEMY_HTTP_TRANSPORT_URL=
export INSTAGRAM_DRY_RUN=false
export INSTAGRAM_USERNAME=               # Account username
export INSTAGRAM_PASSWORD=               # Account password
export INSTAGRAM_APP_ID=                 # Instagram App ID is required
export INSTAGRAM_APP_SECRET=             # Instagram App Secret is required
export INSTAGRAM_BUSINESS_ACCOUNT_ID=    # Optional Business Account ID for additional features
export INSTAGRAM_POST_INTERVAL_MIN=60    # Default: 60 minutes
export INSTAGRAM_POST_INTERVAL_MAX=120   # Default: 120 minutes
export INSTAGRAM_ENABLE_ACTION_PROCESSING=false  # Enable/disable action processing
export INSTAGRAM_ACTION_INTERVAL=5       # Interval between actions in minutes
export INSTAGRAM_MAX_ACTIONS=1          # Maximum number of actions to process at once
export PYTH_NETWORK_ENV=mainnet
export PYTH_MAINNET_HERMES_URL=https://hermes.pyth.network
export PYTH_MAINNET_WSS_URL=wss://hermes.pyth.network/ws
export PYTH_MAINNET_PYTHNET_URL=https://pythnet.rpcpool.com
export PYTH_MAINNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids
export PYTH_MAINNET_PROGRAM_KEY=
export PYTH_TESTNET_HERMES_URL=https://hermes.pyth.network
export PYTH_TESTNET_WSS_URL=wss://hermes.pyth.network/ws
export PYTH_TESTNET_PYTHNET_URL=https://pythnet.rpcpool.com
export PYTH_TESTNET_CONTRACT_REGISTRY=https://pyth.network/developers/price-feed-ids#testnet
export PYTH_TESTNET_PROGRAM_KEY=
export PYTH_MAX_RETRIES=3
export PYTH_RETRY_DELAY=1000
export PYTH_TIMEOUT=5000
export PYTH_GRANULAR_LOG=true
export PYTH_LOG_LEVEL=debug
export PYTH_LOG_LEVEL=info
export RUNTIME_CHECK_MODE=false
export PYTH_ENABLE_PRICE_STREAMING=true
export PYTH_MAX_PRICE_STREAMS=2
export PYTH_TEST_ID01=0xe62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43
export PYTH_TEST_ID02=0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace
export ROUTER_NITRO_EVM_ADDRESS=
export ROUTER_NITRO_EVM_PRIVATE_KEY=
export DKG_ENVIRONMENT=""
export DKG_HOSTNAME=""
export DKG_PORT="8900"
export DKG_PUBLIC_KEY=""
export DKG_PRIVATE_KEY=""
export DKG_BLOCKCHAIN_NAME=""
export INITIA_PRIVATE_KEY=  # Your Initia wallet private key
export INITIA_NODE_URL=  # Initia node URL (default: testnet)
export INITIA_CHAIN_ID=initia-test  # Chain ID (default: testnet)
export NVIDIA_NIM_ENV=production
export NVIDIA_NIM_SPASH=false
export NVIDIA_NIM_API_KEY=
export NVIDIA_NGC_API_KEY=
export NVIDIA_NIM_MAX_RETRIES=3
export NVIDIA_NIM_RETRY_DELAY=1000
export NVIDIA_NIM_TIMEOUT=5000
export NVIDIA_GRANULAR_LOG=true
export NVIDIA_LOG_LEVEL=debug
export NVIDIA_OFFTOPIC_SYSTEM=
export NVIDIA_OFFTOPIC_USER=
export NVIDIA_NIM_BASE_VISION_URL=https://ai.api.nvidia.com/v1/vlm
export NVIDIA_COSMOS_MODEL=nvidia/cosmos-nemotron-34b
export NVIDIA_COSMOS_INVOKE_URL=https://ai.api.nvidia.com/v1/vlm/nvidia/cosmos-nemotron-34b
export NVIDIA_COSMOS_ASSET_URL=https://api.nvcf.nvidia.com/v2/nvcf/assets
export NVIDIA_COSMOS_MAX_TOKENS=1000
export EMAIL_OUTGOING_SERVICE=smtp    # Use "smtp" or "gmail"
export EMAIL_OUTGOING_HOST=smtp.example.com    # Required for SMTP only
export EMAIL_OUTGOING_PORT=465    # Default 465 for secure SMTP, 587 for TLS
export EMAIL_OUTGOING_USER=
export EMAIL_OUTGOING_PASS=  # For Gmail, use App Password
export EMAIL_INCOMING_SERVICE=imap
export EMAIL_INCOMING_HOST=imap.example.com
export EMAIL_INCOMING_PORT=993    # Default port for secure IMAP
export EMAIL_INCOMING_USER=
export EMAIL_INCOMING_PASS=
export SEI_PRIVATE_KEY=
export SEI_NETWORK=   # Either "mainnet", "testnet", or "devnet"
export SEI_RPC_URL=    # Only set if using a different RPC URL from the default
export OMNIFLIX_API_URL=                    # https://rest.omniflix.network
export OMNIFLIX_MNEMONIC=                   # your mnemonic 12 words or 24 words
export OMNIFLIX_RPC_ENDPOINT=               # https://rpc.omniflix.network
export OMNIFLIX_PRIVATE_KEY=                 # your private key
export SUNO_API_KEY=
export UDIO_AUTH_TOKEN=
export FOOTBALL_API_KEY=                   # API key from Football-Data.org (https://www.football-data.org/)
export IMGFLIP_USERNAME=
export IMGFLIP_PASSWORD=
export HYPERLIQUID_PRIVATE_KEY=    # Required for trading and cancelling orders, your_private_key
export HYPERLIQUID_TESTNET=        # Optional, defaults to false; true or false
export FUNDING_PRIVATE_KEY=    # Private key for funding transactions in Lit Protocol
export EVM_RPC_URL=                # RPC endpoint URL for blockchain interactions
export ETHSTORAGE_PRIVATE_KEY=
export ETHSTORAGE_ADDRESS=0x64003adbdf3014f7E38FC6BE752EB047b95da89A
export ETHSTORAGE_RPC_URL=https://rpc.beta.testnet.l2.quarkchain.io:8545
export RESEND_API_KEY=           # Your Resend API key
export DEFAULT_TO_EMAIL=         # Default recipient
export DEFAULT_FROM_EMAIL=       # Default sender
export EMAIL_AUTOMATION_ENABLED=false    # Enable AI detection. If this is enabled, the plugin will automatically detect email-worthy conversations and handle generation/delivery and only that.
export EMAIL_EVALUATION_PROMPT=        # Custom detection criteria for shouldEmail# ####################################
export ANKR_ENV=production
export ANKR_WALLET=
export ANKR_MAX_RETRIES=3
export ANKR_RETRY_DELAY=1000
export ANKR_TIMEOUT=5000
export ANKR_GRANULAR_LOG=true
export ANKR_LOG_LEVEL=debug
export ANKR_RUNTIME_CHECK_MODE=false
export ANKR_SPASH=true
export DCAP_EVM_PRIVATE_KEY=
export DCAP_MODE=                       # Options: OFF, PLUGIN-SGX, PLUGIN-TEE, MOCK
export QUICKINTEL_API_KEY=              # Your QuickIntel API key for token security analysis
export NEWS_API_KEY= # News API KEY from https://newsapi.org/
export BTCFUN_API_URL=                  # Default: https://api-testnet-new.btc.fun
export BTC_PRIVATE_KEY_WIF=             # Your BTC private key in WIF format
export BTC_ADDRESS=                     # Your BTC address
export BTC_MINT_CAP=10000              # Maximum amount that can be minted
export BTC_MINT_DEADLINE=864000        # Deadline for minting in seconds
export BTC_FUNDRAISING_CAP=100         # Maximum amount for fundraising
export TRIKON_WALLET_ADDRESS= # Your Trikon wallet address (must be a valid 64-character hex string starting with '0x')
export TRIKON_INITIAL_BALANCE= # (Optional) The initial balance for the wallet. Defaults to "0" if not provided.
export ARBITRAGE_ETHEREUM_WS_URL=                  # WebSocket URL for Ethereum node connection
export ARBITRAGE_EVM_PROVIDER_URL=                 # RPC URL for Ethereum node connection (if WS not available)
export ARBITRAGE_EVM_PRIVATE_KEY=                  # Private key for the wallet executing arbitrage transactions
export FLASHBOTS_RELAY_SIGNING_KEY=      # Signing key for Flashbots relay interactions
export BUNDLE_EXECUTOR_ADDRESS=          # Address of the bundle executor contract
export DESK_EXCHANGE_PRIVATE_KEY=                  # Required for trading and cancelling orders
export DESK_EXCHANGE_NETWORK=                      # "mainnet" or "testnet
export COMPASS_WALLET_PRIVATE_KEY=
export COMPASS_ARBITRUM_RPC_URL=
export COMPASS_ETHEREUM_RPC_URL=
export COMPASS_BASE_RPC_URL=
export DATA_API_KEY=           # Your d.a.t.a API key
export DATA_AUTH_TOKEN=       # Your d.a.t.a auth token
export NKN_CLIENT_PRIVATE_KEY=           # Required, NKN client private key
export NKN_CLIENT_ID=                    # Optional, NKN client ID
